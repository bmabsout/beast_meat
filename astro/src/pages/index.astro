---
import Layout from '../layouts/Layout.astro';
import Container from '../components/common/Container.astro';
import Section from '../components/common/Section.astro';
import { Image } from 'astro:assets';
import FireEffect from '../components/effects/FireEffect.astro';

const contactInfo = {
  phone: '+971 4 330 6680',
  email: 'customerservice@beastmeat.com',
  website: 'beastmeat.com',
  address: 'Acacia 1 - Dubai Hills - Dubai, UAE'
};

// New data structure for service cards
const services = [
  {
    title: 'Catering',
    description: 'Elevate your event with bespoke live stations cooked on firewood.',
    href: '/catering',
    image: '/images/catering_photos/474470988_17861235624339547_6562859976884574656_n.jpg',
    video: '/videos/catering.mp4', // Placeholder
    alt: 'Beast Meat catering service preparing food'
  },
  {
    title: 'Butchery',
    description: 'Premium cuts sourced globally and locally, tailored to your needs.',
    href: '/butchery',
    image: '/images/catering_photos/cuts.jpg',
    video: '/videos/butchery.mp4', // Placeholder
    alt: 'Selection of premium meat cuts at Beast Meat butchery'
  },
  {
    title: 'Kitchen',
    description: 'Experience expertly prepared meals crafted from the finest ingredients.',
    href: '/kitchen',
    image: '/images/catering_photos/grape_leafs.jpg',
    video: '/videos/kitchen.mp4', // Placeholder
    alt: 'Prepared meal from Beast Meat kitchen'
  }
];
---

<Layout title="Beast Meat - Premium Butchery & Catering">
  <main>
    <!-- ****** NEW ORDER ****** -->
    <!-- Services Overview Section FIRST -->
    <Section id="services-overview" class="services-section" background="dark">
      <Container>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 md:gap-6 lg:gap-8 service-cards-grid">
          {services.map((service, index) => (
            <a 
              href={service.href} 
              class="service-card group block bg-slate-900 rounded-lg shadow-md hover:shadow-xl transition-all duration-500 overflow-hidden opacity-0 translate-y-5" 
              style=`transition-delay: ${index * 150}ms;`
            >
              <div class="aspect-video relative">
                <!-- Video Background -->
                <video 
                  src={service.video}
                  autoplay 
                  loop 
                  muted 
                  playsinline 
                  class="absolute inset-0 w-full h-full object-cover z-0 transition-opacity duration-500"
                  poster={service.image}
                >
                  <Image 
                    src={service.image} 
                    alt={service.alt} 
                    width={600} 
                    height={338} 
                    class="w-full h-full object-cover"
                  />
                </video>
                
                <!-- Reveal Block (Animated) -->
                <div class="reveal-block absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/90 via-black/70 to-transparent opacity-0 transition-all duration-500 ease-in-out z-10">
                  <div class="flex flex-col">
                    <h3 class="font-heading text-3xl md:text-4xl text-white mb-2 drop-shadow-lg">
                      {service.title}
                    </h3>
                    <div class="flex justify-between items-end">
                      <p class="text-white text-sm pr-4">{service.description}</p>
                      <span class="learn-more flex-shrink-0 inline-flex items-center font-medium text-white group-hover:underline pointer-events-auto text-[0.625rem]">
                        Learn More
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 transition-transform duration-200 group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
                        </svg>
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </Container>
    </Section>

    <!-- Hero Section SECOND -->
    <section class="relative h-screen flex items-center justify-center overflow-hidden">
      <!-- Hero Background -->
      <div class="absolute inset-0 z-0">
        <Image
          src="/images/catering_photos/meat_on_fire.jpg"
          alt="Premium meat cuts"
          width={1920}
          height={1080}
          class="w-full h-full object-cover object-[50%_50%] z-[1]"
          loading="eager"
          decoding="async"
        />
        <!-- Fire Effect Overlay -->
        <FireEffect />
        <div class="absolute inset-0 bg-gradient-to-r from-[var(--color-meat-charred)] via-[var(--color-meat-charred)]/80 to-transparent z-[10]"></div>
      </div>
      
      <!-- Hero Content -->
      <Container class="relative z-[20] text-white">
        <h1 class="max-w-4xl">
          Exceptional Cuts,<br/>
          <span class="text-[var(--color-coral-500)]">Extraordinary Service</span>
        </h1>
        <p class="text-[var(--text-xl)] mt-[var(--space-lg)] mb-[var(--space-xl)] max-w-2xl">
          With over 25 years of experience, Beast Meat provides premium butchery and catering services for those who demand nothing but the finest quality meats and dining experiences.
        </p>
        <div class="flex flex-wrap gap-[var(--space-md)]">
          <a href="#services-overview" class="btn btn-primary">
            Our Services
          </a>
          <a href="/about" class="border-2 border-white px-[var(--space-lg)] py-[var(--space-sm)] rounded-[var(--radius-default)] font-semibold transition-all duration-[var(--duration-default)] hover:bg-white hover:text-[var(--color-meat-charred)]">
            About Us
          </a>
          <a href="/contact" class="border-2 border-white px-[var(--space-lg)] py-[var(--space-sm)] rounded-[var(--radius-default)] font-semibold transition-all duration-[var(--duration-default)] hover:bg-white hover:text-[var(--color-meat-charred)]">
            Contact Us
          </a>
        </div>
      </Container>
    </section>

    <!-- Contact Section -->
    <Section id="contact" background="dark">
      <Container>
        <div class="max-w-3xl mx-auto text-center space-y-8">
          <div class="space-y-4">
            <h2 class="font-heading text-4xl md:text-5xl">Get In Touch</h2>
            <p class="text-slate-300 text-lg">
              Have questions or ready to place an order? We offer multiple ways to get in touch, including specialized forms for different inquiries.
            </p>
          </div>

          <div class="flex flex-col items-center py-8">
            <div class="w-16 h-16 bg-[var(--color-beast-red)] rounded-full flex items-center justify-center mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </div>
            <div class="space-y-4 text-center">
              <p class="text-slate-300 text-lg">
                Call us at <a href="tel:+97143306680" class="text-white hover:text-[var(--color-beast-red)] transition-colors font-medium">{contactInfo.phone}</a> or visit our store at {contactInfo.address}
              </p>
              <p class="text-slate-300">
                Visit our contact page to access specialized forms for catering reservations, general inquiries, butchery orders, and feedback.
              </p>
            </div>
          </div>

          <div>
            <a 
              href="/contact" 
              class="inline-flex items-center justify-center px-8 py-4 bg-[var(--color-beast-red)] text-white font-semibold rounded-lg hover:bg-[var(--color-meat-raw)] transition-colors text-lg"
            >
              Contact Us
            </a>
          </div>
        </div>
      </Container>
    </Section>
  </main>
</Layout>

<style>
  .service-card.is-visible {
    opacity: 1;
    transform: translateY(0); /* Card entrance */
  }

  /* Base style for the reveal block */
  .reveal-block {
    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;
    opacity: 0;
    transform: translateY(100%); /* Start fully hidden */
    pointer-events: none;
  }

  /* State when card is visible: Reveal block becomes opaque and partially revealed */
  .service-card.is-visible .reveal-block {
    opacity: 1;
    /* Use CSS variable set by JS for initial transform */
    transform: translateY(var(--reveal-offset)); 
  }

  /* Final State: Fully Revealed (Slide up) */
  .service-card.content-active .reveal-block {
    transform: translateY(0);
    /* Opacity already 1 */
  }

  .reveal-block .learn-more {
     pointer-events: auto;
  }

  .service-card:hover video {
     opacity: 0.85; 
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const serviceSection = document.querySelector('.services-section');
    const serviceCards = document.querySelectorAll('.service-card');

    if (!serviceSection || serviceCards.length === 0) {
      console.warn('Service section or cards not found for animation.');
      return;
    }

    // --- Function to Set Initial Reveal Position via CSS Variable ---
    function setInitialPositions() {
      serviceCards.forEach(card => {
        const revealBlock = card.querySelector('.reveal-block') as HTMLElement | null;
        const title = revealBlock?.querySelector('h3');

        if (revealBlock && title) {
          try {
            const blockStyle = getComputedStyle(revealBlock);
            const titleStyle = getComputedStyle(title);
            
            const paddingTop = parseFloat(blockStyle.paddingTop) || 16; // Default 1rem
            const titleHeight = title.offsetHeight; 
            const marginBottom = parseFloat(titleStyle.marginBottom) || 8; // Default 0.5rem (mb-2)
            
            // Calculate height needed to show block's top padding + title + title's margin-bottom
            const visibleHeight = paddingTop + titleHeight + marginBottom;
            
            const initialTranslate = `calc(100% - ${visibleHeight}px)`;
            
            // console.log(`Card: ${title.textContent?.trim()}, Visible Height: ${visibleHeight}, Offset: ${initialTranslate}`); // Debug log
            
            revealBlock.style.setProperty('--reveal-offset', initialTranslate);

          } catch (e) {
            console.error('Error setting initial reveal position variable:', e);
          }
        }
      });
    }
    // --------------------------------------------------------------

    // --- Run calculation after first paint --- 
    requestAnimationFrame(setInitialPositions);
    // -----------------------------------------

    // --- Intersection Observer (Remains the same) --- 
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          serviceCards.forEach((card, index) => {
            // Trigger entrance opacity animation + partial transform via var()
            setTimeout(() => {
              if (!card.classList.contains('is-visible')) {
                 card.classList.add('is-visible');
              }
            }, 0); 

            // Trigger full reveal transform animation
            const entranceDelay = index * 150; 
            const entranceDuration = 500; 
            const revealDelay = entranceDelay + entranceDuration + 800; 
            
            setTimeout(() => {
              if (!card.classList.contains('content-active')) {
                 card.classList.add('content-active'); 
              }
            }, revealDelay);
            
          });
          observer.unobserve(serviceSection);
        }
      });
    }, {
      threshold: 0.1 
    });

    observer.observe(serviceSection);
    // ---------------------------
  });
</script>
